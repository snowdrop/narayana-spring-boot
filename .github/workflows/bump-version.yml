name: Manual Version Bump to Next SNAPSHOT

on:
  workflow_call:
    inputs:
      base_branch:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      base_branch:
        description: 'Base branch to use'
        required: true
        type: string

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.base_branch }}
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Calculate next snapshot version
        id: bump
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"
          base_version=$(echo $current_version | sed 's/-.*//')
          IFS='.' read -r major minor patch <<< "$base_version"
          next_patch=$((patch + 1))
          next_version="${major}.${minor}.${next_patch}-SNAPSHOT"
          echo "Next version: $next_version"
          echo "next_version=$next_version" >> $GITHUB_OUTPUT

      - name: Create new branch
        run: |
          git checkout -b bump-version-${{ steps.bump.outputs.next_version }}
          echo "Base version: "${{ github.event.inputs.base_branch }}

      - name: Bump version and commit
        run: |
          mvn versions:set -DnewVersion=${{ steps.bump.outputs.next_version }} -DgenerateBackupPoms=false
          mvn versions:commit
          
          echo "::group::Git diff"
          git diff
          echo "::endgroup::"
      
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      
          if [ -n "$(git status --porcelain)" ]; then
            echo "There are changes to commit."
            find . -name "pom.xml.versionsBackup" -delete
            git status
            find . -name pom.xml -exec grep -H "<version>" {} \;
            git add -A
            git commit -m "chore: bump version to ${{ steps.bump.outputs.next_version }}"
          else
            echo "⚠️ No changes detected after mvn versions:commit. Skipping commit."
          fi

      - name: Debug show Git status
        run: git status

      - name: Push changes to new branch
        id: push_branch
        run: |
          git pull --rebase origin ${{ github.event.inputs.base_branch }}
          OUTPUT=$(git push origin bump-version-${{ steps.bump.outputs.next_version }} 2>&1)
          echo "$OUTPUT"
          # extract url for creating PR
          PR_URL=$(echo "$OUTPUT" | grep -o 'https://github.com[^ ]*pull/new[^ ]*' | head -n1)
          if [ -n "$PR_URL" ]; then
            echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
          fi

      - name: Show PR URL
        run: |
          echo "Pull request link: ${{ steps.push_branch.outputs.pr_url }}"

      - name: Create pull request via API
        run: |
          OWNER="snowdrop"
          REPO="narayana-spring-boot"
          BASE="main"
          HEAD="bump-version-${{ steps.bump.outputs.next_version }}"
          TITLE="chore: bump version to ${{ steps.bump.outputs.next_version }}"
          BODY="This PR was created automatically by the release workflow."

          RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$OWNER/$REPO/pulls \
            -d @- <<EOF
            {
              "title": "$TITLE",
              "head": "$HEAD",
              "base": "$BASE",
              "body": "$BODY"
            }
            EOF
          )
          echo "API response: $RESPONSE"
          PR_URL=$(echo "$RESPONSE" | jq -r .html_url)
          echo "Created PR: $PR_URL"



#      - name: Create Pull Request
#        uses: peter-evans/create-pull-request@v5
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          branch: bump-version-${{ steps.bump.outputs.next_version }}
#          base: ${{ github.event.inputs.base_branch }}
#          title: "chore: bump version to ${{ steps.bump.outputs.next_version }}"
#          body: |
#            This PR updates the project version to `${{ steps.bump.outputs.next_version }}`.
#          reviewers: aureamunoz
